import re

# Задание-1: уравнение прямой вида y = kx + b задано в виде строки.
# Определить координату y точки с заданной координатой x.
print("Задание-1")
equation = 'y = -12x + 11111140.2121'
x = 2.5
# вычислите и выведите y
PATTERN = r'=\s(-?\d+.?\d+)x \+ (-?\d+.?\d+)'
result = re.findall(PATTERN, equation)[0]
k, b = float(result[0]), float(result[1])
y = k * x + b
print(y)

# Задание-2: Дата задана в виде строки формата 'dd.mm.yyyy'.
# Проверить, корректно ли введена дата.
# Условия корректности:
# 1. День должен приводиться к целому числу в диапазоне от 1 до 30(31)
#  (в зависимости от месяца, февраль не учитываем)
# 2. Месяц должен приводиться к целому числу в диапазоне от 1 до 12
# 3. Год должен приводиться к целому положительному числу в диапазоне от 1 до 9999
# 4. Длина исходной строки для частей должна быть в соответствии с форматом 
#  (т.е. 2 символа для дня, 2 - для месяца, 4 - для года)

# Пример корректной даты
date = '01.11.1985'

# Примеры некорректных дат
date = '01.22.1001'
date = '1.12.1001'
date = '-2.10.3001'

print("\nЗадание-2")
input_date = '01.11.1985'

date_array = input_date.split('.')
check1 = 1 <= int(date_array[0]) <= 31
check2 = 1 <= int(date_array[1]) <= 12
check3 = 1 <= int(date_array[1]) <= 9999
check4 = (len(date_array[0]) == 2) & (len(date_array[1]) == 2) & (len(date_array[2]) == 4)

if check1 & check2 & check3 & check4:
    print("Дата введена корректно")
else:
    print("Дата введена не корректно")
# Задание-3: "Перевёрнутая башня" (Задача олимпиадного уровня)
#
# Вавилонцы решили построить удивительную башню —
# расширяющуюся к верху и содержащую бесконечное число этажей и комнат.
# Она устроена следующим образом — на первом этаже одна комната,
# затем идет два этажа, на каждом из которых по две комнаты, 
# затем идёт три этажа, на каждом из которых по три комнаты и так далее:
#         ...
#     12  13  14
#     9   10  11
#     6   7   8
#       4   5
#       2   3
#         1
#
# Эту башню решили оборудовать лифтом --- и вот задача:
# нужно научиться по номеру комнаты определять,
# на каком этаже она находится и какая она по счету слева на этом этаже.
#
# Входные данные: В первой строчке задан номер комнаты N, 1 ≤ N ≤ 2 000 000 000.
#
# Выходные данные:  Два целых числа — номер этажа и порядковый номер слева на этаже.
#
# Пример:
# Вход: 13
# Выход: 6 2
#
# Вход: 11
# Выход: 5 3

n = 156
block_size = 1
last_block_number = 1
last_line = 1
# находим положение в рамках блока одной величины
while n > last_block_number:
    block_size += 1
    last_block_number += block_size**2
    last_line += block_size
first_block_number = last_block_number - (block_size**2) + 1 # номер первой комнаты в блоке
first_line = last_line - block_size + 1 # номер первого этажа в блоке

# ищем на каком этаже в рамках блока находится комната, затем находим порядковый номер комнты
for i in range(block_size):
    if first_block_number + i * block_size <= n <= first_block_number + (i+1) * block_size - 1:
        floor = first_line + i
        room = n - (first_block_number + i * block_size) + 1

print(floor, room)